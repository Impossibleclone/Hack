1.................
#include<stdio.h>
#include<conio.h>
void main()
{
int a[10],i,j,temp,n;
clrscr();
printf("\n Enter the max no. of Elements to Sort:\t");
scanf("%d",&n);
printf("\n Enter the Elements : \t");
for(i=0; i<n; i++)
{
scanf("%d",&a[i]);
}
for(i=0; i<n; i++)
for(j=i+1; j<n; j++)
{
if(a[i]>a[j])
{
temp=a[i];
a[i]=a[j];
a[j]=temp;
}
}
printf("\nTHE SORTED ARRAY OF ELEMENT IS:");
for(i=0; i<n; i++)
{
printf("%d\t",a[i]);
}
getch();
}

2........................

#include <stdio.h> #define MAX_SIZE 100
int main()
{
int arr[MAX_SIZE], size, i, pos, value;
printf("Enter the size of the array: "); scanf("%d", &size);
printf("Enter %d elements of the array:\n", size); for(i=0; i<size; i++) {
scanf("%d", &arr[i]);
}
// Insert an element
printf("\nEnter the position and value to insert: "); scanf("%d %d", &pos, &value);
for(i=size-1; i>=pos-1; i--) { arr[i+1] = arr[i];
}
arr[pos-1] = value; size++;
// Delete an element
printf("\nEnter the position of the element to delete: "); scanf("%d", &pos);
for(i=pos-1; i<size-1; i++) { arr[i] = arr[i+1];
}
size--;
printf("\nArray after insertion and deletion:\n"); for(i=0; i<size; i++) {
printf("%d ", arr[i]);
}
return 0;
}

3...............................

// PROGRAM TO PERFORM VARIOUS OPERATION ON STACK
#include <stdio.h>
#define MAX_SIZE 100
int stack[MAX_SIZE];
int top = -1;
// Function to push an element onto the stack
void push(int element) {
if (top == MAX_SIZE - 1) {
printf("Stack overflow\n");
return;
}
stack[++top] = element;
printf("%d pushed to stack\n", element);
}
// Function to pop an element from the stack
int pop() {
if (top == -1) {
printf("Stack underflow\n");
return -1;
}
printf("%d popped from stack\n", stack[top]);
return stack[top--];
}
// Function to display the elements in the stack
void display() {
if (top == -1) {
printf("Stack is empty\n");
return;
}
printf("Elements in stack are:\n");
for (int i = top; i >= 0; i--) {
printf("%d\n", stack[i]);
}
}
int main() {
int choice, element;
while (1) {
printf("\nStack Operations:\n");
printf("1. Push\n");
printf("2. Pop\n");
printf("3. Display\n");
printf("4. Exit\n");
printf("Enter your choice: ");
scanf("%d", &choice);
switch (choice) {
case 1:
printf("Enter element to push: ");
scanf("%d", &element);
push(element);
break;
case 2:
pop();
break;
case 3:
display();
break;
case 4:
printf("Exiting program\n");
return 0;
default:
printf("Invalid choice\n");
}
}
}

4..............................

#include <stdio.h>
# define SIZE 100
void enqueue();
void dequeue();
void show();
int arr[SIZE];
int Rear = - 1;
int Front = - 1;
int main()
{
int ch;
while (1)
{
printf("1.Enqueue Operation\n");
printf("2.Dequeue Operation\n");
printf("3.Display the Queue\n");
printf("4.Exit\n");
printf("Enter your choice of operations : ");
scanf("%d", &ch);
switch (ch)
{
case 1:
enqueue();
break;
case 2:
dequeue();
break;
case 3:
show();
break;
case 4:
return 0;
default:
printf("Incorrect choice \n");
}
}
}
void enqueue()
{
int insert_item;
if (Rear == SIZE - 1)
printf("Overflow \n");
else
{
if (Front == - 1)

Front = 0;
printf("Element to be inserted in the Queue\n : ");
scanf("%d", &insert_item);
Rear = Rear + 1;
arr[Rear] = insert_item;
}
}
void dequeue()
{
if (Front == - 1 )
{
printf("Underflow \n");
return ;
}
else
{
printf("Element deleted from the Queue: %d\n", arr[Front]);
Front = Front + 1;
}
}
void show()
{
if (Front == - 1)
printf("Empty Queue \n");
else
{
printf("Queue: \n");
for (int i = Front; i <= Rear; i++)
printf("%d ", arr[i]);
printf("\n");
}
}